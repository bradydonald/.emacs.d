#    -*- mode: org -*-


Archived entries from file /home/d/.emacs.d/configuration.org


* Add a CREATED timestamp property to all TODOs
  :PROPERTIES:
  :ARCHIVE_TIME: 2021-09-18 Sat 07:14
  :ARCHIVE_FILE: ~/.emacs.d/configuration.org
  :ARCHIVE_OLPATH: Org Mode/Personal and Work Toggle
  :ARCHIVE_CATEGORY: configuration
  :END:

  All of this comes from [[https://gist.github.com/mrvdb/4037694][this gist]]. Would be nice if org mode just offered
  this as a local set up option.

  #+begin_src emacs-lisp

    ;; Allow automatically handing of created/expired meta data.
    (require 'org-expiry)

    ;; Configure it a bit to my liking
    (setq
      org-expiry-created-property-name "CREATED" ; Name of property when an item is created
      org-expiry-inactive-timestamps   t         ; Don't have everything in the agenda view
    )

    (defun db/insert-created-timestamp()
      "Insert a CREATED property using org-expiry.el for TODO entries"
      (org-expiry-insert-created)
      (org-back-to-heading)
      (org-end-of-line)
      (insert " "))

    ;; Whenever a TODO entry is created, I want a timestamp
    ;; Advice org-insert-todo-heading to insert a created timestamp using org-expiry
    (defadvice org-insert-todo-heading (after db/created-timestamp-advice activate)
      "Insert a CREATED property using org-expiry.el for TODO entries"
      (db/insert-created-timestamp))

    ;; Make it active
    (ad-activate 'org-insert-todo-heading)

    (defadvice org-capture (after db/created-timestamp-advice activate)
      "Insert a CREATED property using org-expiry.el for TODO entries"
      ; Test if the captured entry is a TODO, if so insert the created
      ; timestamp property, otherwise ignore
      (when (member (org-get-todo-state) org-todo-keywords-1)
        (db/insert-created-timestamp)))

    (ad-activate 'org-capture)

    ;; Add feature to allow easy adding of tags in a capture window
    (defun db/add-tags-in-capture()
      (interactive)
      "Insert tags in a capture window without losing the point"
      (save-excursion
        (org-back-to-heading)
        (org-set-tags)))

  #+end_src

* SUSPENDED Undo Tree
  :PROPERTIES:
  :ARCHIVE_TIME: 2022-08-08 Mon 09:42
  :ARCHIVE_FILE: ~/.emacs.d/configuration.org
  :ARCHIVE_CATEGORY: configuration
  :ARCHIVE_TODO: SUSPENDED
  :END:

  Performance on msys2 is very sub-par so turning off.
  
  #+BEGIN_SRC emacs-lisp
    ;; (use-package undo-tree
    ;;   :config
    ;;   (setq undo-tree-history-directory-alist '(("." . "~/.emacs.d/undo")))
    ;;   (global-undo-tree-mode))
  #+END_SRC
  

* Hyperbole
  :PROPERTIES:
  :ARCHIVE_TIME: 2022-08-08 Mon 09:43
  :ARCHIVE_FILE: ~/.emacs.d/configuration.org
  :ARCHIVE_CATEGORY: configuration
  :END:

  Change Hyperbole key to M-\ which is nicely above the enter key on this
  laptop.
  
  #+BEGIN_SRC emacs-lisp
    (use-package hyperbole
      :config
      (add-hook 'hyperbole-init-hook (lambda () (hkey-set-key "\M-\\" 'hkey-either))))
  #+END_SRC
  

* Chat GPT Integration in Org Mode
  :PROPERTIES:
  :ARCHIVE_TIME: 2023-05-15 Mon 14:59
  :ARCHIVE_FILE: ~/.emacs.d/configuration.org
  :ARCHIVE_CATEGORY: configuration
  :END:

  Using https://github.com/rksm/org-ai
  
  #+BEGIN_SRC emacs-lisp

    (setq db/org-ai nil)

    
    (if (db/add-to-load-path "~/.emacs.d/lisp/org-ai" db/org-ai)
        (use-package org-ai
          :load-path (lambda () "lisp/org-ai")
          :commands (org-ai-mode)
          :custom
          (org-ai-openai-api-token (db/openai-api-key))
          :init
          (add-hook 'org-mode-hook #'org-ai-mode)
          :config
          (advice-add 'keyboard-quit :before #'org-ai-keyboard-quit)))

  #+END_SRC

